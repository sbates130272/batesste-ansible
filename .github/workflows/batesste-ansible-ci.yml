name: batesste-ansible

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:

  build-spellcheck-lint-test:
    strategy:
      matrix:
        runs-on: [ubuntu-22.04, ubuntu-24.04]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup python and pip
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12.3'
      - name: Install pip packages
        run: python3 -m pip install -r requirements.txt
      - name: GitHub spellcheck action
        uses: rojopolis/spellcheck-github-actions@0.45.0
      - name: Render the checkout directory safe for the lint step
        run: git config --global --add safe.directory /github/workspace
      - name: Run ansible-galaxy to install collections and roles
        run: ansible-galaxy install -r requirements.yml
      - name: Run ansible-lint
        uses: ansible/ansible-lint@v25.8.2
        with:
          args: "-c .ansible-lint"
          setup_python: "false"
      - name: Create an SSH keypair
        run: mkdir -p .ssh && ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N ""
      - name: Create a GNU PGP folder
        run: mkdir -p .gnupg
      - name: Write hosts-ci file
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: ./playbooks/hosts-ci
          write-mode: overwrite
          contents: |
            [locals]
            [runners]
            localhost root_user=runner username=runner ansible_connection=local
            [awsmachines]
            [localvms]
      - name: Run the default playbook against the local runner
        run: ansible-playbook ${PLAYBOOK} -v -i ${HOSTS} --extra-vars targets=${TARGETS}
        working-directory: ./playbooks
        env:
          PLAYBOOK: setup-newmachine.yml
          TARGETS: runners
          HOSTS: hosts-ci
          ANSIBLE_VAULT_PASSWORD_FILE: ./vault-env
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}

  rocm_setup-role-test:
    runs-on: ubuntu-24.04
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Install pip packages
        run: python3 -m pip install -r requirements.txt
      - name: Run ansible-galaxy to install collections and roles
        run: ansible-galaxy install -r requirements.yml
      - name: Create an SSH keypair
        run: mkdir -p .ssh && ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N ""
      - name: Create a GNU PGP folder
        run: mkdir -p .gnupg
      - name: Write hosts-ci file
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: ./roles/rocm_setup/hosts-ci
          write-mode: overwrite
          contents: |
            [runners]
            localhost root_user=runner username=runner ansible_connection=local
      - name: Run the test playbook against the local runner
        run: ansible-playbook -v -i hosts-ci ./tests/test.yml --limit runners
        working-directory: ./roles/rocm_setup
        env:
          ANSIBLE_ROLES_PATH: ${{ github.workspace }}/roles
          ANSIBLE_VAULT_PASSWORD_FILE: ${{ github.workspace }}/playbooks/vault-env
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
