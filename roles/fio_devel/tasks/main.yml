---
# Copyright (c) Stephen Bates, 2022
#
# Clone the upstream fio repo from Jens and checkout the SHA given by
# the associated input variable. Also ensure the packages required to
# run specific tests are included and also update this version of fio
# to the PATH. Also install the fio-stuff repo which has some useful
# tools in it.

- name: Set a fact containing the current roles' path
  ansible.builtin.set_fact:
    calling_role_path_fact: "{{ role_path }}"

- name: Test the host platform to see if it can support this role
  ansible.builtin.include_role:
    name: check_platform
  vars:
    calling_role_path: "{{ calling_role_path_fact }}"

- name: Install fio related packages
  ansible.builtin.package:
    name:
      - gettext
      - libaio-dev
      - libnuma-dev
      - libpci-dev
      - libpmem-dev
      - libpmem2-dev
      - liburing-dev
      - linux-tools-common
      - nvme-cli
      - pkg-config
  become: true

- name: Gather the kernel fact on the remote when on AWS
  ansible.builtin.setup:
    gather_subset:
      - kernel
  when: inventory_hostname in groups['awsmachines'] | default([])

- name: Install fio related packages when on AWS
  ansible.builtin.package:
    name:
      - linux-tools-{{ ansible_kernel }}
      - linux-tools-aws
  become: true
  when: inventory_hostname in groups['awsmachines'] | default([])

- name: Ensure Projects folder exists.
  ansible.builtin.file:
    path: ~/Projects
    state: directory
    mode: "0755"

- name: Checkout upstream fio repo from Github
  ansible.builtin.git:
    repo: https://github.com/axboe/fio.git
    dest: ~/Projects/fio
    force: "{{ fio_devel_fio_force }}"
    version: "{{ fio_devel_fio_sha }}"
  notify: Configure, build and install fio
  register: repo_clone
  failed_when:
    - repo_clone.failed
    - not 'Local modifications exist in the destination' in repo_clone.msg

- name: Checkout fio-stuff repo
  ansible.builtin.git:
    repo: "{{ (username == 'batesste') | ternary('git@github.com:sbates130272/fio-stuff.git', 'https://github.com/sbates130272/fio-stuff.git') }}"
    dest: ~/Projects/fio-stuff
    accept_newhostkey: true
    force: "{{ fio_devel_fio_stuff_force }}"
    version: "{{ fio_devel_fio_stuff_sha }}"
  register: repo_clone
  failed_when:
    - repo_clone.failed
    - not 'Local modifications exist in the destination' in repo_clone.msg
